    Tr fn(Tr, T1)(T1 t1) {
        return boilerplate!(Tr)(call(t1));
    }

    Tr fn(Tr, T1, T2)(T1 t1, T2 t2) {
        return boilerplate!(Tr)(call(t1, t2));
    }

    Tr fn(Tr, T1, T2, T3)(T1 t1, T2 t2, T3 t3) {
        return boilerplate!(Tr)(call(t1, t2, t3));
    }

    Tr fn(Tr, T1, T2, T3, T4)(T1 t1, T2 t2, T3 t3, T4 t4) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5, T6)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5, t6));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5, T6, T7)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5, t6, t7));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5, T6, T7, T8)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5, t6, t7, t8));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5, T6, T7, T8, T9)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5, t6, t7, t8, t9));
    }

    Tr fn(Tr, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10) {
        return boilerplate!(Tr)(call(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10));
    }

